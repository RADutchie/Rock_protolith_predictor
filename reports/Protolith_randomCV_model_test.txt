# Tuning hyper-parameters for f1BalancedRandomForrest

Best parameters set found on development set:

{'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 70}

Grid scores on development set:

0.932 (+/-0.057) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': None}
0.935 (+/-0.055) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 110}
0.935 (+/-0.056) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 70}
0.932 (+/-0.058) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 40}
0.932 (+/-0.057) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 90}
0.935 (+/-0.055) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 30}
0.935 (+/-0.055) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 100}
0.935 (+/-0.055) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 100}
0.935 (+/-0.056) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 70}
0.935 (+/-0.055) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 30}
0.932 (+/-0.056) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 90}
0.932 (+/-0.056) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 5, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': None}
0.932 (+/-0.057) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': None}
0.932 (+/-0.054) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 2, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 10}
0.932 (+/-0.057) for {'random_state': 101, 'n_estimators': 1600, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 60}
0.935 (+/-0.054) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 2, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 50}
0.935 (+/-0.054) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 5, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 70}
0.932 (+/-0.057) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 70}
0.935 (+/-0.055) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 110}
0.935 (+/-0.054) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 5, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 110}
0.935 (+/-0.055) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 50}
0.932 (+/-0.056) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 2, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 80}
0.935 (+/-0.054) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 2, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 30}
0.935 (+/-0.055) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 100}
0.932 (+/-0.058) for {'random_state': 101, 'n_estimators': 1600, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 110}
0.934 (+/-0.055) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 50}
0.935 (+/-0.054) for {'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 5, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 90}
0.932 (+/-0.056) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 2, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 90}
0.935 (+/-0.055) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 30}
0.932 (+/-0.057) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 30}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

              precision    recall  f1-score   support

           0       0.99      0.94      0.96     49732
           1       0.50      0.89      0.64      3604

    accuracy                           0.93     53336
   macro avg       0.75      0.91      0.80     53336
weighted avg       0.96      0.93      0.94     53336


[[46523  3209]
 [  402  3202]]

# Tuning hyper-parameters for roc_auc for f1BalancedRandomForrest

Best parameters set found on development set:

{'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 80}

Grid scores on development set:

0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 80}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 90}
0.947 (+/-0.062) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 100}
0.945 (+/-0.062) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 30}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 110}
0.947 (+/-0.063) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 80}
0.947 (+/-0.063) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 40}
0.946 (+/-0.063) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': None}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 40}
0.947 (+/-0.063) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 70}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 100}
0.947 (+/-0.063) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 90}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 70}
0.947 (+/-0.063) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 50}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 50}
0.947 (+/-0.063) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 90}
0.947 (+/-0.063) for {'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 80}
0.944 (+/-0.062) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 50}
0.947 (+/-0.063) for {'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 90}
0.940 (+/-0.066) for {'random_state': 101, 'n_estimators': 1600, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 10}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 1600, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 100}
0.945 (+/-0.062) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 40}
0.945 (+/-0.062) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 5, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 90}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 90}
0.945 (+/-0.062) for {'random_state': 101, 'n_estimators': 1600, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 100}
0.947 (+/-0.063) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': None}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 110}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 90}
0.945 (+/-0.063) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 90}
0.947 (+/-0.063) for {'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 80}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

              precision    recall  f1-score   support

           0       0.99      0.94      0.96     49732
           1       0.50      0.89      0.64      3604

    accuracy                           0.93     53336
   macro avg       0.75      0.91      0.80     53336
weighted avg       0.96      0.93      0.94     53336


[[46522  3210]
 [  401  3203]]

# Tuning hyper-parameters for f1_weighted ExtraTreesClassifier

Best parameters set found on development set:

{'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 110}

Grid scores on development set:

0.944 (+/-0.021) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 10}
0.955 (+/-0.026) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 2, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 30}
0.944 (+/-0.021) for {'random_state': 101, 'n_estimators': 1600, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 10}
0.955 (+/-0.026) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 5, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 90}
0.955 (+/-0.026) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 40}
0.959 (+/-0.028) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 50}
0.959 (+/-0.028) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 110}
0.955 (+/-0.026) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 110}
0.924 (+/-0.013) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 2, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 10}
0.958 (+/-0.028) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 20}
0.959 (+/-0.027) for {'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 100}
0.959 (+/-0.028) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 40}
0.944 (+/-0.021) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 10}
0.955 (+/-0.026) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 40}
0.923 (+/-0.013) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 10}
0.957 (+/-0.026) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 100}
0.958 (+/-0.028) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 20}
0.958 (+/-0.027) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 80}
0.958 (+/-0.028) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 100}
0.958 (+/-0.027) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 70}
0.959 (+/-0.028) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 60}
0.959 (+/-0.026) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 5, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 70}
0.958 (+/-0.028) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 30}
0.957 (+/-0.027) for {'random_state': 101, 'n_estimators': 1600, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 90}
0.958 (+/-0.027) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 70}
0.959 (+/-0.026) for {'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 110}
0.949 (+/-0.024) for {'random_state': 101, 'n_estimators': 1600, 'min_samples_split': 2, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 20}
0.959 (+/-0.028) for {'random_state': 101, 'n_estimators': 1600, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': None}
0.958 (+/-0.026) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 70}
0.959 (+/-0.028) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 80}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

              precision    recall  f1-score   support

           0       0.98      0.99      0.99     49732
           1       0.87      0.70      0.77      3604

    accuracy                           0.97     53336
   macro avg       0.92      0.84      0.88     53336
weighted avg       0.97      0.97      0.97     53336


[[49349   383]
 [ 1092  2512]]

# Tuning hyper-parameters for roc_auc

Best parameters set found on development set:

{'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 50}

Grid scores on development set:

0.946 (+/-0.070) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 100}
0.945 (+/-0.069) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 20}
0.946 (+/-0.069) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 90}
0.945 (+/-0.073) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': None}
0.929 (+/-0.083) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 10}
0.919 (+/-0.091) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 10}
0.947 (+/-0.066) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 50}
0.947 (+/-0.067) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 50}
0.945 (+/-0.073) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 110}
0.947 (+/-0.068) for {'random_state': 101, 'n_estimators': 1000, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 50}
0.946 (+/-0.069) for {'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 70}
0.944 (+/-0.074) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 110}
0.945 (+/-0.071) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 90}
0.947 (+/-0.066) for {'random_state': 101, 'n_estimators': 400, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 90}
0.929 (+/-0.083) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 10}
0.945 (+/-0.074) for {'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 40}
0.946 (+/-0.069) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 2, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': None}
0.946 (+/-0.072) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 110}
0.945 (+/-0.068) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 20}
0.946 (+/-0.066) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 110}
0.946 (+/-0.072) for {'random_state': 101, 'n_estimators': 600, 'min_samples_split': 5, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': None}
0.947 (+/-0.067) for {'random_state': 101, 'n_estimators': 1800, 'min_samples_split': 10, 'min_samples_leaf': 2, 'max_features': None, 'max_depth': 90}
0.947 (+/-0.067) for {'random_state': 101, 'n_estimators': 1400, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 40}
0.937 (+/-0.091) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 100}
0.937 (+/-0.096) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': None}
0.946 (+/-0.066) for {'random_state': 101, 'n_estimators': 200, 'min_samples_split': 5, 'min_samples_leaf': 4, 'max_features': None, 'max_depth': 80}
0.947 (+/-0.068) for {'random_state': 101, 'n_estimators': 2000, 'min_samples_split': 10, 'min_samples_leaf': 1, 'max_features': None, 'max_depth': 70}
0.947 (+/-0.066) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 10, 'min_samples_leaf': 4, 'max_features': 'sqrt', 'max_depth': 90}
0.938 (+/-0.095) for {'random_state': 101, 'n_estimators': 800, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_features': 'sqrt', 'max_depth': 70}
0.947 (+/-0.069) for {'random_state': 101, 'n_estimators': 1200, 'min_samples_split': 5, 'min_samples_leaf': 2, 'max_features': 'sqrt', 'max_depth': 100}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

              precision    recall  f1-score   support

           0       0.98      0.99      0.98     49732
           1       0.87      0.68      0.76      3604

    accuracy                           0.97     53336
   macro avg       0.92      0.84      0.87     53336
weighted avg       0.97      0.97      0.97     53336


[[49368   364]
 [ 1149  2455]]

RUSBoost Clasifier
# Tuning hyper-parameters for f1_weighted

Best parameters set found on development set:

{'random_state': 101, 'n_estimators': 2000, 'learning_rate': 0.1}

Grid scores on development set:

0.914 (+/-0.061) for {'random_state': 101, 'n_estimators': 2600, 'learning_rate': 0.01}
0.916 (+/-0.057) for {'random_state': 101, 'n_estimators': 800, 'learning_rate': 0.1}
0.910 (+/-0.063) for {'random_state': 101, 'n_estimators': 2000, 'learning_rate': 0.01}
0.915 (+/-0.060) for {'random_state': 101, 'n_estimators': 3000, 'learning_rate': 0.01}
0.108 (+/-0.169) for {'random_state': 101, 'n_estimators': 1200, 'learning_rate': 10}
0.811 (+/-0.135) for {'random_state': 101, 'n_estimators': 200, 'learning_rate': 0.01}
0.108 (+/-0.169) for {'random_state': 101, 'n_estimators': 1800, 'learning_rate': 10}
0.108 (+/-0.169) for {'random_state': 101, 'n_estimators': 2400, 'learning_rate': 10}
0.108 (+/-0.169) for {'random_state': 101, 'n_estimators': 2600, 'learning_rate': 10}
0.854 (+/-0.084) for {'random_state': 101, 'n_estimators': 2800, 'learning_rate': 1}
0.108 (+/-0.169) for {'random_state': 101, 'n_estimators': 1000, 'learning_rate': 10}
0.916 (+/-0.058) for {'random_state': 101, 'n_estimators': 1800, 'learning_rate': 0.1}
0.916 (+/-0.057) for {'random_state': 101, 'n_estimators': 2000, 'learning_rate': 0.1}
0.253 (+/-0.665) for {'random_state': 101, 'n_estimators': 2000, 'learning_rate': 10}
0.855 (+/-0.047) for {'random_state': 101, 'n_estimators': 2000, 'learning_rate': 1}
0.916 (+/-0.058) for {'random_state': 101, 'n_estimators': 2600, 'learning_rate': 0.1}
0.852 (+/-0.135) for {'random_state': 101, 'n_estimators': 800, 'learning_rate': 1}
0.916 (+/-0.059) for {'random_state': 101, 'n_estimators': 1600, 'learning_rate': 0.1}
0.253 (+/-0.665) for {'random_state': 101, 'n_estimators': 1400, 'learning_rate': 10}
0.912 (+/-0.062) for {'random_state': 101, 'n_estimators': 2200, 'learning_rate': 0.01}
0.108 (+/-0.169) for {'random_state': 101, 'n_estimators': 600, 'learning_rate': 10}
0.253 (+/-0.665) for {'random_state': 101, 'n_estimators': 2800, 'learning_rate': 10}
0.847 (+/-0.081) for {'random_state': 101, 'n_estimators': 2400, 'learning_rate': 1}
0.851 (+/-0.080) for {'random_state': 101, 'n_estimators': 2200, 'learning_rate': 1}
0.837 (+/-0.097) for {'random_state': 101, 'n_estimators': 1600, 'learning_rate': 1}
0.889 (+/-0.064) for {'random_state': 101, 'n_estimators': 800, 'learning_rate': 0.01}
0.915 (+/-0.060) for {'random_state': 101, 'n_estimators': 2800, 'learning_rate': 0.01}
0.858 (+/-0.067) for {'random_state': 101, 'n_estimators': 3000, 'learning_rate': 1}
0.108 (+/-0.169) for {'random_state': 101, 'n_estimators': 800, 'learning_rate': 10}
0.916 (+/-0.058) for {'random_state': 101, 'n_estimators': 1400, 'learning_rate': 0.1}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

              precision    recall  f1-score   support

           0       0.99      0.91      0.95     49732
           1       0.39      0.83      0.53      3604

    accuracy                           0.90     53336
   macro avg       0.69      0.87      0.74     53336
weighted avg       0.95      0.90      0.92     53336


[[45155  4577]
 [  620  2984]]

Tuned Balanced Random Forrest

{'max_depth': 50,
 'max_features': 'sqrt',
 'min_samples_leaf': 1,
 'min_samples_split': 2,
 'n_estimators': 1000,
 'random_state': 101}

Detailed classification report:

The model is trained on the full development set.
The scores are computed on the full evaluation set.

              precision    recall  f1-score   support

           0       0.99      0.94      0.96     49732
           1       0.50      0.89      0.64      3604

    accuracy                           0.93     53336
   macro avg       0.75      0.91      0.80     53336
weighted avg       0.96      0.93      0.94     53336


[[46518  3214]
 [  399  3205]]

